'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="BoM")>  _
Partial Public Class BoMDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Insertbomh(instance As bomh)
    End Sub
  Partial Private Sub Updatebomh(instance As bomh)
    End Sub
  Partial Private Sub Deletebomh(instance As bomh)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.TSMU.My.MySettings.Default.BoMConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property bomhs() As System.Data.Linq.Table(Of bomh)
		Get
			Return Me.GetTable(Of bomh)
		End Get
	End Property
	
	Public ReadOnly Property boms() As System.Data.Linq.Table(Of bom)
		Get
			Return Me.GetTable(Of bom)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.bomh")>  _
Partial Public Class bomh
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _bomid As String
	
	Private _tgl As System.Nullable(Of Date)
	
	Private _invtid As String
	
	Private _descr As String
	
	Private _siteid As String
	
	Private _runner As String
	
	Private _ct As String
	
	Private _mc As String
	
	Private _cavity As String
	
	Private _wc As String
	
	Private _allowance As System.Nullable(Of Integer)
	
	Private _mp As System.Nullable(Of Integer)
	
	Private _status As String
	
	Private _active As System.Nullable(Of Boolean)
	
	Private _created_by As String
	
	Private _created_date As System.Nullable(Of Date)
	
	Private _updated_by As String
	
	Private _updated_date As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnbomidChanging(value As String)
    End Sub
    Partial Private Sub OnbomidChanged()
    End Sub
    Partial Private Sub OntglChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OntglChanged()
    End Sub
    Partial Private Sub OninvtidChanging(value As String)
    End Sub
    Partial Private Sub OninvtidChanged()
    End Sub
    Partial Private Sub OndescrChanging(value As String)
    End Sub
    Partial Private Sub OndescrChanged()
    End Sub
    Partial Private Sub OnsiteidChanging(value As String)
    End Sub
    Partial Private Sub OnsiteidChanged()
    End Sub
    Partial Private Sub OnrunnerChanging(value As String)
    End Sub
    Partial Private Sub OnrunnerChanged()
    End Sub
    Partial Private Sub OnctChanging(value As String)
    End Sub
    Partial Private Sub OnctChanged()
    End Sub
    Partial Private Sub OnmcChanging(value As String)
    End Sub
    Partial Private Sub OnmcChanged()
    End Sub
    Partial Private Sub OncavityChanging(value As String)
    End Sub
    Partial Private Sub OncavityChanged()
    End Sub
    Partial Private Sub OnwcChanging(value As String)
    End Sub
    Partial Private Sub OnwcChanged()
    End Sub
    Partial Private Sub OnallowanceChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnallowanceChanged()
    End Sub
    Partial Private Sub OnmpChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnmpChanged()
    End Sub
    Partial Private Sub OnstatusChanging(value As String)
    End Sub
    Partial Private Sub OnstatusChanged()
    End Sub
    Partial Private Sub OnactiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnactiveChanged()
    End Sub
    Partial Private Sub Oncreated_byChanging(value As String)
    End Sub
    Partial Private Sub Oncreated_byChanged()
    End Sub
    Partial Private Sub Oncreated_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncreated_dateChanged()
    End Sub
    Partial Private Sub Onupdated_byChanging(value As String)
    End Sub
    Partial Private Sub Onupdated_byChanged()
    End Sub
    Partial Private Sub Onupdated_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onupdated_dateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bomid", DbType:="VarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property bomid() As String
		Get
			Return Me._bomid
		End Get
		Set
			If (String.Equals(Me._bomid, value) = false) Then
				Me.OnbomidChanging(value)
				Me.SendPropertyChanging
				Me._bomid = value
				Me.SendPropertyChanged("bomid")
				Me.OnbomidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tgl", DbType:="SmallDateTime")>  _
	Public Property tgl() As System.Nullable(Of Date)
		Get
			Return Me._tgl
		End Get
		Set
			If (Me._tgl.Equals(value) = false) Then
				Me.OntglChanging(value)
				Me.SendPropertyChanging
				Me._tgl = value
				Me.SendPropertyChanged("tgl")
				Me.OntglChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_invtid", DbType:="VarChar(20)")>  _
	Public Property invtid() As String
		Get
			Return Me._invtid
		End Get
		Set
			If (String.Equals(Me._invtid, value) = false) Then
				Me.OninvtidChanging(value)
				Me.SendPropertyChanging
				Me._invtid = value
				Me.SendPropertyChanged("invtid")
				Me.OninvtidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_descr", DbType:="VarChar(100)")>  _
	Public Property descr() As String
		Get
			Return Me._descr
		End Get
		Set
			If (String.Equals(Me._descr, value) = false) Then
				Me.OndescrChanging(value)
				Me.SendPropertyChanging
				Me._descr = value
				Me.SendPropertyChanged("descr")
				Me.OndescrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_siteid", DbType:="VarChar(10)")>  _
	Public Property siteid() As String
		Get
			Return Me._siteid
		End Get
		Set
			If (String.Equals(Me._siteid, value) = false) Then
				Me.OnsiteidChanging(value)
				Me.SendPropertyChanging
				Me._siteid = value
				Me.SendPropertyChanged("siteid")
				Me.OnsiteidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_runner", DbType:="VarChar(20)")>  _
	Public Property runner() As String
		Get
			Return Me._runner
		End Get
		Set
			If (String.Equals(Me._runner, value) = false) Then
				Me.OnrunnerChanging(value)
				Me.SendPropertyChanging
				Me._runner = value
				Me.SendPropertyChanged("runner")
				Me.OnrunnerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ct", DbType:="VarChar(10)")>  _
	Public Property ct() As String
		Get
			Return Me._ct
		End Get
		Set
			If (String.Equals(Me._ct, value) = false) Then
				Me.OnctChanging(value)
				Me.SendPropertyChanging
				Me._ct = value
				Me.SendPropertyChanged("ct")
				Me.OnctChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mc", DbType:="VarChar(20)")>  _
	Public Property mc() As String
		Get
			Return Me._mc
		End Get
		Set
			If (String.Equals(Me._mc, value) = false) Then
				Me.OnmcChanging(value)
				Me.SendPropertyChanging
				Me._mc = value
				Me.SendPropertyChanged("mc")
				Me.OnmcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cavity", DbType:="VarChar(50)")>  _
	Public Property cavity() As String
		Get
			Return Me._cavity
		End Get
		Set
			If (String.Equals(Me._cavity, value) = false) Then
				Me.OncavityChanging(value)
				Me.SendPropertyChanging
				Me._cavity = value
				Me.SendPropertyChanged("cavity")
				Me.OncavityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_wc", DbType:="VarChar(20)")>  _
	Public Property wc() As String
		Get
			Return Me._wc
		End Get
		Set
			If (String.Equals(Me._wc, value) = false) Then
				Me.OnwcChanging(value)
				Me.SendPropertyChanging
				Me._wc = value
				Me.SendPropertyChanged("wc")
				Me.OnwcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_allowance", DbType:="Int")>  _
	Public Property allowance() As System.Nullable(Of Integer)
		Get
			Return Me._allowance
		End Get
		Set
			If (Me._allowance.Equals(value) = false) Then
				Me.OnallowanceChanging(value)
				Me.SendPropertyChanging
				Me._allowance = value
				Me.SendPropertyChanged("allowance")
				Me.OnallowanceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mp", DbType:="Int")>  _
	Public Property mp() As System.Nullable(Of Integer)
		Get
			Return Me._mp
		End Get
		Set
			If (Me._mp.Equals(value) = false) Then
				Me.OnmpChanging(value)
				Me.SendPropertyChanging
				Me._mp = value
				Me.SendPropertyChanged("mp")
				Me.OnmpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="VarChar(30)")>  _
	Public Property status() As String
		Get
			Return Me._status
		End Get
		Set
			If (String.Equals(Me._status, value) = false) Then
				Me.OnstatusChanging(value)
				Me.SendPropertyChanging
				Me._status = value
				Me.SendPropertyChanged("status")
				Me.OnstatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_active", DbType:="Bit")>  _
	Public Property active() As System.Nullable(Of Boolean)
		Get
			Return Me._active
		End Get
		Set
			If (Me._active.Equals(value) = false) Then
				Me.OnactiveChanging(value)
				Me.SendPropertyChanging
				Me._active = value
				Me.SendPropertyChanged("active")
				Me.OnactiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_by", DbType:="VarChar(50)")>  _
	Public Property created_by() As String
		Get
			Return Me._created_by
		End Get
		Set
			If (String.Equals(Me._created_by, value) = false) Then
				Me.Oncreated_byChanging(value)
				Me.SendPropertyChanging
				Me._created_by = value
				Me.SendPropertyChanged("created_by")
				Me.Oncreated_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_date", DbType:="DateTime")>  _
	Public Property created_date() As System.Nullable(Of Date)
		Get
			Return Me._created_date
		End Get
		Set
			If (Me._created_date.Equals(value) = false) Then
				Me.Oncreated_dateChanging(value)
				Me.SendPropertyChanging
				Me._created_date = value
				Me.SendPropertyChanged("created_date")
				Me.Oncreated_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_updated_by", DbType:="VarChar(50)")>  _
	Public Property updated_by() As String
		Get
			Return Me._updated_by
		End Get
		Set
			If (String.Equals(Me._updated_by, value) = false) Then
				Me.Onupdated_byChanging(value)
				Me.SendPropertyChanging
				Me._updated_by = value
				Me.SendPropertyChanged("updated_by")
				Me.Onupdated_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_updated_date", DbType:="DateTime")>  _
	Public Property updated_date() As System.Nullable(Of Date)
		Get
			Return Me._updated_date
		End Get
		Set
			If (Me._updated_date.Equals(value) = false) Then
				Me.Onupdated_dateChanging(value)
				Me.SendPropertyChanging
				Me._updated_date = value
				Me.SendPropertyChanged("updated_date")
				Me.Onupdated_dateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.bom")>  _
Partial Public Class bom
	
	Private _bomid As String
	
	Private _parentid As String
	
	Private _invtid As String
	
	Private _descr As String
	
	Private _qty As System.Nullable(Of Double)
	
	Private _unit As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bomid", DbType:="VarChar(20)")>  _
	Public Property bomid() As String
		Get
			Return Me._bomid
		End Get
		Set
			If (String.Equals(Me._bomid, value) = false) Then
				Me._bomid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_parentid", DbType:="VarChar(20)")>  _
	Public Property parentid() As String
		Get
			Return Me._parentid
		End Get
		Set
			If (String.Equals(Me._parentid, value) = false) Then
				Me._parentid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_invtid", DbType:="VarChar(20)")>  _
	Public Property invtid() As String
		Get
			Return Me._invtid
		End Get
		Set
			If (String.Equals(Me._invtid, value) = false) Then
				Me._invtid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_descr", DbType:="VarChar(100)")>  _
	Public Property descr() As String
		Get
			Return Me._descr
		End Get
		Set
			If (String.Equals(Me._descr, value) = false) Then
				Me._descr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_qty", DbType:="Float")>  _
	Public Property qty() As System.Nullable(Of Double)
		Get
			Return Me._qty
		End Get
		Set
			If (Me._qty.Equals(value) = false) Then
				Me._qty = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unit", DbType:="VarChar(10)")>  _
	Public Property unit() As String
		Get
			Return Me._unit
		End Get
		Set
			If (String.Equals(Me._unit, value) = false) Then
				Me._unit = value
			End If
		End Set
	End Property
End Class
