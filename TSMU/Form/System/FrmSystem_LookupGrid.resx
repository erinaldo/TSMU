<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ToolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnOk.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QXjwAAAAAElFTkSuQmCC
</value>
  </data>
</root>